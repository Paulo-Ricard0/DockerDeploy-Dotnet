services:
  docker.api:
    build:
      context: .
      dockerfile: Docker.API/Dockerfile
    ports:
      - 3535:8080
    environment:
      - ASPNETCORE_ENVIRONMENT=Development 
      - ASPNETCORE_HTTP_PORTS=8080
    depends_on:
      mssql:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    networks:
      - api_networks


  migrate: 
    build:
      context: .
      dockerfile: Docker.API/Dockerfile
      target: migration
    environment:
      - ASPNETCORE_ENVIRONMENT=Development 
    depends_on:
      mssql:
        condition: service_healthy
    networks:
      - api_networks


  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - "ACCEPT_EULA=Y"
      - "MSSQL_SA_PASSWORD=Senha123@"
    ports:
      - 1433:1433
    volumes:
      - "mssql_data:/var/opt/mssql"
    networks:
      - api_networks
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S tcp:localhost,1433 -U sa -P Senha123@ -Q 'SELECT 1' -C || exit 1"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 3s


volumes:
  mssql_data:
  

networks:
  api_networks:
    driver: bridge